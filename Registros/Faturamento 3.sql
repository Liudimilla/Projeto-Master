----
CREATE FUNCTION nome_da_funcao (@parametro tipo_de_dado)
----  Retorne o faturamento total de todas as notas fiscais de um bairro;
SELECT SUM(INF.QUANTIDADE * INF.[PREÇO]) AS FATURAMENTO
FROM [ITENS NOTAS FISCAIS] INF
INNER JOIN [NOTAS FISCAIS] NF
ON INF.NUMERO = NF.NUMERO
INNER JOIN [TABELA DE CLIENTES] TC
ON TC.CPF = NF.CPF
WHERE TC.BAIRRO = 'Jardins'

CREATE FUNCTION FaturamentoBairro (@BAIRRO VARCHAR(50))
RETURNS FLOAT
AS
BEGIN
   DECLARE @FATURAMENTO FLOAT
   SELECT @FATURAMENTO = SUM(INF.QUANTIDADE * INF.[PREÇO]) FATURAMENTO
   FROM [ITENS NOTAS FISCAIS] INF
   INNER JOIN [NOTAS FISCAIS] NF
   ON INF.NUMERO = NF.NUMERO
   INNER JOIN [TABELA DE CLIENTES] TC
   ON TC.CPF = NF.CPF
   WHERE TC.BAIRRO = @BAIRRO
   RETURN @FATURAMENTO
END;
-----
BEGIN
    SELECT @CONTADOR_NOTAS = COUNT(*) FROM [dbo].[NOTAS FISCAIS] WHERE NUMERO = @LIMITE_MINIMO
    IF @CONTADOR_NOTAS > 0
        BEGIN
            INSERT INTO @TABELA_NUMEROS (NUMERO, STATUS) VALUES (@LIMITE_MINIMO, 'É NOTA FISCAL')
        END
    ELSE
        BEGIN
            INSERT INTO @TABELA_NUMEROS (NUMERO, STATUS) VALUES (@LIMITE_MINIMO, 'NÃO É NOTA FISCAL')
        END

END
-----  Informa o que e nota fiscal
DECLARE @LIMITE_MINIMO INT, @LIMITE_MAXIMO INT
DECLARE @TABELA_NUMEROS TABLE ([NUMERO] INT, [STATUS] VARCHAR(200))
DECLARE @CONTADOR_NOTAS INT


SET @LIMITE_MINIMO = 1
SET @LIMITE_MAXIMO = 1000000


SET NOCOUNT ON
WHILE @LIMITE_MINIMO <= @LIMITE_MAXIMO
BEGIN
    SELECT @CONTADOR_NOTAS = COUNT(*) FROM [dbo].[NOTAS FISCAIS] WHERE NUMERO = @LIMITE_MINIMO
    IF @CONTADOR_NOTAS > 0
        BEGIN
            INSERT INTO @TABELA_NUMEROS (NUMERO, STATUS) VALUES (@LIMITE_MINIMO, 'É NOTA FISCAL')
        END
    ELSE
        BEGIN
            INSERT INTO @TABELA_NUMEROS (NUMERO, STATUS) VALUES (@LIMITE_MINIMO, 'NÃO É NOTA FISCAL')
        END
    SET @LIMITE_MINIMO = @LIMITE_MINIMO + 1
END
SELECT * FROM @TABELA_NUMEROS ORDER BY NUMERO
